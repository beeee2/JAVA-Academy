import java.util.Vector;

interface IStack<T>
{
  public T pop();
  public boolean push(T ob);
}

class MyStack<T> implements IStack<T>
{
  Vector<T> I = null;
  
  public MyStack(){
    I = new Vector<T>();
  }
  
  @Override
  public T pop(){
    if(I.size() == 0 )
      return null;
    else
      return I.remove(0);
  }
  
  @Override
  public boolean push(T ob){
    I.add(0, ob);
    return true;
  }
}


public class StackExample1{

  public static void main(String[] args){
    IStack<Integer> stack = new MyStack<Integer>();
    
    for(int i=0; i<10; i++)
      stack.push(i);
      
    while(true){
      Integer n = stack.pop();
      if(n==null) break;
      System.out.print(n + " ");
    }
    
  }

}
